<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你的小黄^_^</title>
  <icon>https://www.gravatar.com/avatar/3a25a3ab34305615e80247defadfd4f6</icon>
  <subtitle>做一名有情怀的程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://huangyiblog.com/"/>
  <updated>2018-06-02T07:34:00.725Z</updated>
  <id>http://huangyiblog.com/</id>
  
  <author>
    <name>Mr.Huangyi</name>
    <email>18757163093@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>232. 用栈实现队列</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/232-%E7%94%A8%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"/>
    <id>http://huangyiblog.com/题解集/232-用栈实现队列/</id>
    <published>2018-06-02T07:32:50.000Z</published>
    <updated>2018-06-02T07:34:00.725Z</updated>
    
    <content type="html"><![CDATA[<p>使用栈实现队列的下列操作：</p><p>push(x) – 将一个元素放入队列的尾部。<br>pop() – 从队列首部移除元素。<br>peek() – 返回队列首部的元素。<br>empty() – 返回队列是否为空。<br>示例:</p><p>MyQueue queue = new MyQueue();</p><p>queue.push(1);<br>queue.push(2);<br>queue.peek();  // 返回 1<br>queue.pop();   // 返回 1<br>queue.empty(); // 返回 false<br>说明:</p><p>你只能使用标准的栈操作 – 也就是只有 push to top, peek/pop from top, size, 和 is empty 操作是合法的。<br>你所使用的语言也许不支持栈。你可以使用 list 或者 deque（双端队列）来模拟一个栈，只要是标准的栈操作即可。<br>假设所有操作都是有效的 （例如，一个空的队列不会调用 pop 或者 peek 操作）。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyQueue</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; st,temp;</span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    MyQueue() &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Push element x to the back of queue. */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        st.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Removes the element from in front of queue and returns that element. */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        <span class="keyword">if</span>(temp.empty())&#123;</span><br><span class="line">         <span class="keyword">while</span>(!st.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            val = st.top();</span><br><span class="line">            temp.push(val);</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = temp.top();</span><br><span class="line">        temp.pop();</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Get the front element. */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">while</span>(!st.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> val = st.top();</span><br><span class="line">            temp.push(val);</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans = temp.top();</span><br><span class="line">        <span class="keyword">while</span>(!temp.empty())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> val = temp.top();</span><br><span class="line">            st.push(val);</span><br><span class="line">            temp.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns whether the queue is empty. */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st.empty()&amp;&amp;temp.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyQueue object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MyQueue obj = new MyQueue();</span></span><br><span class="line"><span class="comment"> * obj.push(x);</span></span><br><span class="line"><span class="comment"> * int param_2 = obj.pop();</span></span><br><span class="line"><span class="comment"> * int param_3 = obj.peek();</span></span><br><span class="line"><span class="comment"> * bool param_4 = obj.empty();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用栈实现队列的下列操作：&lt;/p&gt;
&lt;p&gt;push(x) – 将一个元素放入队列的尾部。&lt;br&gt;pop() – 从队列首部移除元素。&lt;br&gt;peek() – 返回队列首部的元素。&lt;br&gt;empty() – 返回队列是否为空。&lt;br&gt;示例:&lt;/p&gt;
&lt;p&gt;MyQueue qu
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="LeetCode" scheme="http://huangyiblog.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>225. 用队列实现栈</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/225-%E7%94%A8%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0%E6%A0%88/"/>
    <id>http://huangyiblog.com/题解集/225-用队列实现栈/</id>
    <published>2018-06-02T07:13:01.000Z</published>
    <updated>2018-06-02T07:14:08.356Z</updated>
    
    <content type="html"><![CDATA[<p>使用队列实现栈的下列操作：</p><p>push(x) – 元素 x 入栈<br>pop() – 移除栈顶元素<br>top() – 获取栈顶元素<br>empty() – 返回栈是否为空<br>注意:</p><p>你只能使用队列的基本操作– 也就是 push to back, peek/pop from front, size, 和 is empty 这些操作是合法的。<br>你所使用的语言也许不支持队列。 你可以使用 list 或者 deque（双端队列）来模拟一个队列 , 只要是标准的队列操作即可。<br>你可以假设所有操作都是有效的（例如, 对一个空的栈不会调用 pop 或者 top 操作）。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span>: </span><br><span class="line">        <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; st,st2;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    MyStack() &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Push element x onto stack. */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        st.push(x);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Removes the element on top of the stack and returns that element. */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> result = top();</span><br><span class="line">        st.pop();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Get the top element. */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(empty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> runtime_error(<span class="string">"stack is empty."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(st.empty())&#123;</span><br><span class="line">            swap(st,st2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(st.size()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            st2.push(st.front());</span><br><span class="line">            st.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> st.front();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns whether the stack is empty. */</span></span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st.empty()&amp;&amp;st2.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MyStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * MyStack obj = new MyStack();</span></span><br><span class="line"><span class="comment"> * obj.push(x);</span></span><br><span class="line"><span class="comment"> * int param_2 = obj.pop();</span></span><br><span class="line"><span class="comment"> * int param_3 = obj.top();</span></span><br><span class="line"><span class="comment"> * bool param_4 = obj.empty();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用队列实现栈的下列操作：&lt;/p&gt;
&lt;p&gt;push(x) – 元素 x 入栈&lt;br&gt;pop() – 移除栈顶元素&lt;br&gt;top() – 获取栈顶元素&lt;br&gt;empty() – 返回栈是否为空&lt;br&gt;注意:&lt;/p&gt;
&lt;p&gt;你只能使用队列的基本操作– 也就是 push to b
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>L2-010 排座位（25 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/L2-010-%E6%8E%92%E5%BA%A7%E4%BD%8D%EF%BC%8825-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/L2-010-排座位（25-分）/</id>
    <published>2018-06-02T06:53:03.000Z</published>
    <updated>2018-06-02T06:53:29.317Z</updated>
    
    <content type="html"><![CDATA[<p>L2-010 排座位（25 分）<br>布置宴席最微妙的事情，就是给前来参宴的各位宾客安排座位。无论如何，总不能把两个死对头排到同一张宴会桌旁！这个艰巨任务现在就交给你，对任何一对客人，请编写程序告诉主人他们是否能被安排同席。</p><p>输入格式：</p><p>输入第一行给出3个正整数：N（&lt;= 100），即前来参宴的宾客总人数，则这些人从1到N编号；M为已知两两宾客之间的关系数；K为查询的条数。随后M行，每行给出一对宾客之间的关系，格式为：“宾客1 宾客2 关系”，其中“关系”为1表示是朋友，-1表示是死对头。注意两个人不可能既是朋友又是敌人。最后K行，每行给出一对需要查询的宾客编号。</p><p>这里假设朋友的朋友也是朋友。但敌人的敌人并不一定就是朋友，朋友的敌人也不一定是敌人。只有单纯直接的敌对关系才是绝对不能同席的。</p><p>输出格式：</p><p>对每个查询输出一行结果：如果两位宾客之间是朋友，且没有敌对关系，则输出“No problem”；如果他们之间并不是朋友，但也不敌对，则输出“OK”；如果他们之间有敌对，然而也有共同的朋友，则输出“OK but…”；如果他们之间只有敌对关系，则输出“No way”。</p><p>输入样例：</p><p>7 8 4<br>5 6 1<br>2 7 -1<br>1 3 1<br>3 4 1<br>6 7 -1<br>1 2 1<br>1 4 1<br>2 3 -1<br>3 4<br>5 7<br>2 3<br>7 2<br>输出样例：</p><p>No problem<br>OK<br>OK but…<br>No way</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; friendd;</span><br><span class="line"><span class="keyword">int</span> enemy[<span class="number">111</span>][<span class="number">111</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findfriend</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x!=friendd[x])&#123;</span><br><span class="line">        x = friendd[x];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Union</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> frienda = findfriend(a);</span><br><span class="line">    <span class="keyword">int</span> friendb = findfriend(b);</span><br><span class="line">    <span class="keyword">if</span>(frienda!=friendb)&#123;</span><br><span class="line">        friendd[frienda] = friendb;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> n,m,k,a,b,c;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    friendd.resize(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        friendd[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="number">1</span>)&#123;</span><br><span class="line">            Union(a,b);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            enemy[a][b] = <span class="number">1</span>;</span><br><span class="line">            enemy[b][a] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">if</span>(findfriend(a)==findfriend(b)&amp;&amp;enemy[a][b]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No problem\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(findfriend(a)!=findfriend(b)&amp;&amp;enemy[a][b]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"OK\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(findfriend(a)==findfriend(b)&amp;&amp;enemy[a][b]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"OK but...\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(enemy[a][b]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"No way\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;L2-010 排座位（25 分）&lt;br&gt;布置宴席最微妙的事情，就是给前来参宴的各位宾客安排座位。无论如何，总不能把两个死对头排到同一张宴会桌旁！这个艰巨任务现在就交给你，对任何一对客人，请编写程序告诉主人他们是否能被安排同席。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入第
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1025 反转链表 (25)（25 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1025-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8-25-%EF%BC%8825-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1025-反转链表-25-（25-分）/</id>
    <published>2018-06-02T06:37:28.000Z</published>
    <updated>2018-06-02T06:37:55.367Z</updated>
    
    <content type="html"><![CDATA[<p>1025 反转链表 (25)（25 分）<br>给定一个常数K以及一个单链表L，请编写程序将L中每K个结点反转。例如：给定L为1→2→3→4→5→6，K为3，则输出应该为3→2→1→6→5→4；如果K为4，则输出应该为4→3→2→1→5→6，即最后不到K个元素不反转。</p><p>输入格式：</p><p>每个输入包含1个测试用例。每个测试用例第1行给出第1个结点的地址、结点总个数正整数N(&lt;= 10^5^)、以及正整数K(&lt;=N)，即要求反转的子链结点的个数。结点的地址是5位非负整数，NULL地址用-1表示。</p><p>接下来有N行，每行格式为：</p><p>Address Data Next</p><p>其中Address是结点地址，Data是该结点保存的整数数据，Next是下一结点的地址。</p><p>输出格式：</p><p>对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。</p><p>输入样例：</p><p>00100 6 4<br>00000 4 99999<br>00100 1 12309<br>68237 6 -1<br>33218 3 00000<br>99999 5 68237<br>12309 2 33218<br>输出样例：</p><p>00000 4 33218<br>33218 3 12309<br>12309 2 00100<br>00100 1 99999<br>99999 5 68237<br>68237 6 -1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100005</span>;</span><br><span class="line"><span class="keyword">int</span> data[maxn];</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">list</span>[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> next[maxn];</span><br><span class="line">    <span class="keyword">int</span> first,k,n,temp,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;first,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;temp);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;data[temp],&amp;next[temp]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(first!=<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">list</span>[sum++] = first;</span><br><span class="line">        first = next[first];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(sum-sum%k);i+=k)&#123;</span><br><span class="line">      reverse(begin(<span class="built_in">list</span>) + i, begin(<span class="built_in">list</span>) + i + k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;sum<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%05d %d %05d\n"</span>,<span class="built_in">list</span>[i],data[<span class="built_in">list</span>[i]],<span class="built_in">list</span>[i+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%05d %d -1"</span>,<span class="built_in">list</span>[sum<span class="number">-1</span>],data[<span class="built_in">list</span>[sum<span class="number">-1</span>]]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1025 反转链表 (25)（25 分）&lt;br&gt;给定一个常数K以及一个单链表L，请编写程序将L中每K个结点反转。例如：给定L为1→2→3→4→5→6，K为3，则输出应该为3→2→1→6→5→4；如果K为4，则输出应该为4→3→2→1→5→6，即最后不到K个元素不反转。&lt;/p
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1024 科学计数法 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1024-%E7%A7%91%E5%AD%A6%E8%AE%A1%E6%95%B0%E6%B3%95-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1024-科学计数法-20-（20-分）/</id>
    <published>2018-06-02T06:16:29.000Z</published>
    <updated>2018-06-02T06:16:56.536Z</updated>
    
    <content type="html"><![CDATA[<p>1024 科学计数法 (20)（20 分）<br>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><p>现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。</p><p>输入格式：</p><p>每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。</p><p>输出格式：</p><p>对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。</p><p>输入样例1：</p><p>+1.23400E-03<br>输出样例1：</p><p>0.00123400<br>输入样例2：</p><p>-1.2E+10<br>输出样例2：</p><p>-120000000001024 科学计数法 (20)（20 分）<br>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><p>现以科学计数法的格式给出实数A，请编写程序按普通数字表示法输出A，并保证所有有效位都被保留。</p><p>输入格式：</p><p>每个输入包含1个测试用例，即一个以科学计数法表示的实数A。该数字的存储长度不超过9999字节，且其指数的绝对值不超过9999。</p><p>输出格式：</p><p>对每个测试用例，在一行中按普通数字表示法输出A，并保证所有有效位都被保留，包括末尾的0。</p><p>输入样例1：</p><p>+1.23400E-03<br>输出样例1：</p><p>0.00123400<br>输入样例2：</p><p>-1.2E+10<br>输出样例2：</p><p>-12000000000</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">10010</span>];</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">if</span>(str[<span class="number">0</span>]==<span class="string">'-'</span>) <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">    <span class="keyword">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(str[pos]!=<span class="string">'E'</span>)&#123;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=pos+<span class="number">2</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="built_in">exp</span>=<span class="built_in">exp</span>*<span class="number">10</span>+(str[i]-<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">exp</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;pos;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(str[pos]==<span class="string">'-'</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"0."</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">exp</span><span class="number">-1</span>;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;pos;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;pos;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i]==<span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,str[i]);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="built_in">exp</span>+<span class="number">2</span>&amp;&amp;pos<span class="number">-3</span>!=<span class="built_in">exp</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"."</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">exp</span>-(pos<span class="number">-3</span>);i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1024 科学计数法 (20)（20 分）&lt;br&gt;科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式[+-][1-9]”.”[0-9]+E[+-][0-9]+，即数字的整数部分只有1位，小数部分至少有1位，该数字及其指数部分的正负号即使对正数也必定
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1023 组个最小数 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1023-%E7%BB%84%E4%B8%AA%E6%9C%80%E5%B0%8F%E6%95%B0-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1023-组个最小数-20-（20-分）/</id>
    <published>2018-06-02T06:14:42.000Z</published>
    <updated>2018-06-02T06:15:09.941Z</updated>
    
    <content type="html"><![CDATA[<p>1023 组个最小数 (20)（20 分）<br>给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。</p><p>现给定数字，请编写程序输出能够组成的最小的数。</p><p>输入格式：</p><p>每个输入包含1个测试用例。每个测试用例在一行中给出10个非负整数，顺序表示我们拥有数字0、数字1、……数字9的个数。整数间用一个空格分隔。10个数字的总个数不超过50，且至少拥有1个非0的数字。</p><p>输出格式：</p><p>在一行中输出能够组成的最小的数。</p><p>输入样例：</p><p>2 2 0 0 0 3 0 0 1 0<br>输出样例：</p><p>10015558</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">11</span>],b[<span class="number">55</span>];</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>,x,i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        <span class="keyword">while</span>(a[i]!=<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            b[j]=i;</span><br><span class="line">            a[i]--;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b,b+j);</span><br><span class="line">    <span class="keyword">if</span>(b[<span class="number">0</span>]!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;j;i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;j;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[i]!=<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">             x=i;</span><br><span class="line">             b[<span class="number">0</span>]=b[x];</span><br><span class="line">             b[x]=<span class="number">0</span>;</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;j;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d"</span>,b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1023 组个最小数 (20)（20 分）&lt;br&gt;给定数字0-9各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意0不能做首位）。例如：给定两个0，两个1，三个5，一个8，我们得到的最小的数就是10015558。&lt;/p&gt;
&lt;p&gt;现给
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1022 D进制的A+B (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1022-D%E8%BF%9B%E5%88%B6%E7%9A%84A-B-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1022-D进制的A-B-20-（20-分）/</id>
    <published>2018-06-02T06:12:41.000Z</published>
    <updated>2018-06-02T06:13:07.975Z</updated>
    
    <content type="html"><![CDATA[<p>1022 D进制的A+B (20)（20 分）<br>输入两个非负10进制整数A和B(&lt;=2^30^-1)，输出A+B的D (1 &lt; D &lt;= 10)进制数。</p><p>输入格式：</p><p>输入在一行中依次给出3个整数A、B和D。</p><p>输出格式：</p><p>输出A+B的D进制数。</p><p>输入样例：</p><p>123 456 8<br>输出样例：</p><p>1103</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t,a,b,d;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;d;</span><br><span class="line">    t=a+b;</span><br><span class="line">    <span class="keyword">int</span> s[<span class="number">111</span>];</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(t==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">while</span>(t!=<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i++]=t%d;</span><br><span class="line">        t=t/d;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1022 D进制的A+B (20)（20 分）&lt;br&gt;输入两个非负10进制整数A和B(&amp;lt;=2^30^-1)，输出A+B的D (1 &amp;lt; D &amp;lt;= 10)进制数。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入在一行中依次给出3个整数A、B和D。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1021 个位数统计 (15)（15 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1021-%E4%B8%AA%E4%BD%8D%E6%95%B0%E7%BB%9F%E8%AE%A1-15-%EF%BC%8815-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1021-个位数统计-15-（15-分）/</id>
    <published>2018-06-02T06:10:53.000Z</published>
    <updated>2018-06-02T06:11:30.374Z</updated>
    
    <content type="html"><![CDATA[<p>1021 个位数统计 (15)（15 分）<br>给定一个k位整数N = d~k-1~<em>10^k-1^ + … + d~1~</em>10^1^ + d~0~ (0&lt;=d~i~&lt;=9, i=0,…,k-1, d~k-1~&gt;0)，请编写程序统计每种不同的个位数字出现的次数。例如：给定N = 100311，则有2个0，3个1，和1个3。</p><p>输入格式：</p><p>每个输入包含1个测试用例，即一个不超过1000位的正整数N。</p><p>输出格式：</p><p>对N中每一种不同的个位数字，以D:M的格式在一行中输出该位数字D及其在N中出现的次数M。要求按D的升序输出。</p><p>输入样例：</p><p>100311<br>输出样例：</p><p>0:2<br>1:3<br>3:1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">1111</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line">    <span class="keyword">int</span> len,i,j,a[<span class="number">1111</span>],b[<span class="number">1111</span>],c[<span class="number">11</span>];</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">-1</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=s[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a,a+len);</span><br><span class="line">    j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=a[i+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            c[j]=a[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;j;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d:%d\n"</span>,c[i],b[c[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1021 个位数统计 (15)（15 分）&lt;br&gt;给定一个k位整数N = d~k-1~&lt;em&gt;10^k-1^ + … + d~1~&lt;/em&gt;10^1^ + d~0~ (0&amp;lt;=d~i~&amp;lt;=9, i=0,…,k-1, d~k-1~&amp;gt;0)，请编写程序统计每种不同
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>钱钟书和杨绛</title>
    <link href="http://huangyiblog.com/%E9%9A%8F%E7%AC%94/%E9%92%B1%E9%92%9F%E4%B9%A6%E5%92%8C%E6%9D%A8%E7%BB%9B/"/>
    <id>http://huangyiblog.com/随笔/钱钟书和杨绛/</id>
    <published>2018-06-01T03:46:10.000Z</published>
    <updated>2018-06-01T08:33:05.668Z</updated>
    
    <content type="html"><![CDATA[<p>说起来，真正了解到钱杨二人还是在我中学时期的语文课堂上，当时正在学一篇杨绛的散文《老王》，经过老师的介绍，我对她的丈夫也表现出兴趣。高中的学业很紧张，每周只有半天的假期，同学们都很珍惜这短暂的自由时间，而我一般都会跑去镇上的新华书店，看看有没有自己想要读的书，有一次，就遇到了展架上包装精致的《围城》，毫不犹豫便买下了，读了一些他们的作品，简直令人眼前一亮，这对夫妻的才华在书中，在字里行间都能令人叹服。无奈，高中时间实在太紧，没有机会去读太多的杂书。到了大学，大一在富春的图书馆，有一个学校推荐的必读书架，当时注意到了一本钱钟书传，虽说挺薄的，但也让我了解到了不少关于钱钟书的品性。钱钟书生于书香世家，最大的爱好便是读书，在清华的时候就已经崭露头角，骨子里透着一股傲气。到后来能成为学贯中西的著名学者，与他的性格，习惯都是分不开的。我到了大学，最开心的就是有更多属于自己支配的时间了，我陆陆续续也读了不少杂书。小说，散文，诗歌，传记，技术通吃。《钱钟书传》之后，我也读了些关于杨绛的作品，包括《洗澡》，《生命的烤火者：杨绛传》等，杨绛的《我们三》也深深打动了我，两人回国后，环境其实十分艰难，磕磕绊绊也遇到了许多阻碍，尤其是文化大革命期间，当时他们的好友傅雷夫妇不愿苟活，选择了投井自杀，而他们选择了隐忍，熬了过去。在这之后，钱钟书的《管锥编》，杨绛翻译的《堂吉诃德》相继出版，二人的名气也急剧飙升，然后这并不是他们所在意的，钱钟书的追求其实很简单，这辈子只想做做学问，贡献一生。两人的淡定从容实在难能可贵，可惜好景不长，病魔接踵而至，先是带走了女儿圆圆，之后钱钟书也走了，只剩下了杨绛一人。没有切身体会，很难想象杨绛当时是怎么熬过来的，之后她在《走在人生边上》也提到：人生实苦。但我相信，这点苦对他们来说不算什么，因为他们在一起的时光都是辛福的。多少人究其一生也没能遇到自己钟意的爱人，而他们，从开始相爱，就一直甜蜜到了最后。</p><h1 id="相识：两人一见钟情"><a href="#相识：两人一见钟情" class="headerlink" title="相识：两人一见钟情"></a>相识：两人一见钟情</h1><p>《圣经》有言：“有的时候，人和人的缘分，一面就足够了。因为，他就是你前世的人。”文坛伉俪钱钟书和杨绛的爱情便应了这句话。</p><p>世间最好的爱情，就是我叫杨绛，你叫钱钟书</p><p>1932年3月的一天，风和日丽，幽香袭人。杨绛在清华大学古月堂的门口，幸运地结识了大名鼎鼎的清华才子钱钟书。当时钱钟书穿着青布大褂，脚穿一双毛布底鞋，戴一副老式眼镜，目光炯炯有神，谈吐机智幽默，满身浸润着儒雅气质。</p><p>两人一见如故，侃侃而谈。钱钟书急切地澄清：“外界传说我已经订婚，这不是事实，请你不要相信。”杨绛也趁机说明：“坊间传闻追求我的男孩子有孔门弟子‘七十二人’之多，也有人说费孝通是我的男朋友，这也不是事实。”恰巧两人在文学上有共同的爱好和追求，这一切使他们怦然心动，一见钟情。</p><h1 id="相恋：琴瑟和弦，鸾凤和鸣"><a href="#相恋：琴瑟和弦，鸾凤和鸣" class="headerlink" title="相恋：琴瑟和弦，鸾凤和鸣"></a>相恋：琴瑟和弦，鸾凤和鸣</h1><p>在二十世纪的中国，杨绛与钱钟书是天造地设的绝配。胡河清曾赞叹：“钱锺书、杨绛伉俪，可说是当代文学中的一双名剑。钱锺书如英气流动之雄剑，常常出匣自鸣，语惊天下；杨绛则如青光含藏之雌剑，大智若愚，不显刀刃。”在这样一个单纯温馨的学者家庭，两人过着“琴瑟和弦，鸾凤和鸣”的围城生活。</p><p>1935年，杨绛陪夫君去英国牛津就读。初到牛津，杨绛很不习惯异国的生活，又乡愁迭起。一天早上，杨绛还在睡梦中，钱钟书早已在厨房忙活开了，平日里“拙手笨脚”的他煮了鸡蛋，烤了面包，热了牛奶，还做了醇香的红茶。睡眼惺忪的杨绛被钱钟书叫醒，他把一张用餐小桌支在床上，把美味的早餐放在小桌上，这样杨绛就可以坐在床上随意享用了。吃着夫君亲自做的饭，杨绛幸福地说：“这是我吃过的最香的早饭”，听到爱妻满意的回答，钱钟书欣慰地笑了。</p><p>学习之余，杨绛和钱钟书还展开读书竞赛，比谁读的书多。通常情况下，两人所读的册数不相上下。有一次，钱钟书和杨绛交流阅读心得：“一本书，第二遍再读，总会发现读第一遍时会有许多疏忽。最精彩的句子，要读几遍之后才会发现。”杨绛不以为然，说：“这是你的读法。我倒是更随性，好书多看几遍，不感兴趣的书则浏览一番即可。”读读写写，嘻嘻闹闹，两人的婚姻生活倒充满了悠悠情趣，羡煞旁人。</p><h1 id="相守：只求在一起，各自做力所能及的事"><a href="#相守：只求在一起，各自做力所能及的事" class="headerlink" title="相守：只求在一起，各自做力所能及的事"></a>相守：只求在一起，各自做力所能及的事</h1><p>两人恋爱时，除了约会，就是通信。有一次，杨绛的回信落在了钱钟书父亲钱基博老先生的手里。钱父好奇心突发，悄悄拆开信件，看完喜不自禁。原来，杨绛在信中说：“现在吾两人快乐无用，须两家父母兄弟皆大欢喜，吾两人之快乐乃彻始彻终不受障碍”，钱父大赞：“此诚聪明人语！”在钱父看来，杨绛思维缜密，办事周到，这对于不谙世事的儿子，是可遇不可求的贤内助。1935年，两人完婚，牵手走入围城。</p><p>爱女阿圆出生时，钱钟书致“欢迎辞”：“这是我的女儿，我喜欢的。”杨绛说女儿是自己“平生唯一的杰作”。</p><p>回国后，这个三口之家一直居无定所。1962年8月，一家人迁居干面胡同新建的宿舍，有四个房间，还有一个阳台，他们又添置了家具，终于有了个舒适的家。</p><p>那时，钱钟书经常带着妻女去饭馆吃饭，有一次，在等待上菜的空挡，钱钟书和阿圆一直在观察其他饭桌上吃客的言谈举止，并且像看戏一样很是着迷。杨绛奇怪地问：“你们这是干嘛啊？”阿圆说：“观察生活是件很有趣的事，你看那一桌两个人是夫妻，在吵架，那一桌是在宴请亲戚……”杨绛明白了，这父女俩是在看戏呢。待到吃完饭的时候，有的戏已经下场，有的戏正在上演。这三人在一起，总有无穷的趣味，平淡的生活充满了温情。</p><p>这个三口之家，很朴素，很单纯，温馨如饴，只求相守在一起，各自做力所能及的事……时光静静流逝着，再美好的故事总有谢幕的一天，杨绛在《我们仨》里写道：“1997年早春，阿媛去世。1998年岁末，钟书去世。我们三人就此失散了。现在，只剩下我一个。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;说起来，真正了解到钱杨二人还是在我中学时期的语文课堂上，当时正在学一篇杨绛的散文《老王》，经过老师的介绍，我对她的丈夫也表现出兴趣。高中的学业很紧张，每周只有半天的假期，同学们都很珍惜这短暂的自由时间，而我一般都会跑去镇上的新华书店，看看有没有自己想要读的书，有一次，就遇到
      
    
    </summary>
    
      <category term="随笔" scheme="http://huangyiblog.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="阅读" scheme="http://huangyiblog.com/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>206. 反转链表</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/206-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/"/>
    <id>http://huangyiblog.com/题解集/206-反转链表/</id>
    <published>2018-06-01T02:56:29.000Z</published>
    <updated>2018-06-01T02:57:19.312Z</updated>
    
    <content type="html"><![CDATA[<p>反转一个单链表。</p><p>示例:</p><p>输入: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL<br>输出: 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL<br>进阶:<br>你可以迭代或递归地反转链表。你能否用两种方法解决这道题？</p><p>迭代法：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode *prev = <span class="literal">NULL</span>;</span><br><span class="line">        ListNode *curr = head;</span><br><span class="line">        <span class="keyword">while</span>(curr!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">            ListNode *temp = curr-&gt;next;</span><br><span class="line">            curr-&gt;next = prev;</span><br><span class="line">            prev = curr;</span><br><span class="line">            curr = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        head = prev;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>递归法： </p><p>递归的终止步分三种情况讨论：</p><ol><li>原链表为空，直接返回空链表即可。</li><li>原链表仅有一个元素，返回该元素。</li><li>原链表有两个以上元素，由于是单链表，故翻转需要自尾部向首部逆推。<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">reverseList</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode *newHead = reverseList(head-&gt;next);</span><br><span class="line">        head-&gt;next-&gt;next = head;</span><br><span class="line">        head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="keyword">return</span> newHead;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;反转一个单链表。&lt;/p&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;p&gt;输入: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULL&lt;br&gt;输出: 5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULL&lt;br&gt;进阶:&lt;br&gt;你可以迭代或递归地反转链表。你能否用两
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="LeetCode" scheme="http://huangyiblog.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>1020 月饼 (25)（25 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1020-%E6%9C%88%E9%A5%BC-25-%EF%BC%8825-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1020-月饼-25-（25-分）/</id>
    <published>2018-06-01T02:27:21.000Z</published>
    <updated>2018-06-01T02:27:44.860Z</updated>
    
    <content type="html"><![CDATA[<p>1020 月饼 (25)（25 分）<br>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有3种月饼，其库存量分别为18、15、10万吨，总售价分别为75、72、45亿元。如果市场的最大需求量只有20万吨，那么我们最大收益策略应该是卖出全部15万吨第2种月饼、以及5万吨第3种月饼，获得 72 + 45/2 = 94.5（亿元）。</p><p>输入格式：</p><p>每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N表示月饼的种类数、以及不超过500（以万吨为单位）的正整数D表示市场最大需求量。随后一行给出N个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出N个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p><p>输出格式：</p><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后2位。</p><p>输入样例：</p><p>3 20<br>18 15 10<br>75 72 45<br>输出样例：</p><p>94.50</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> amount;</span><br><span class="line">    <span class="keyword">float</span> price;</span><br><span class="line">    <span class="keyword">float</span> avg;</span><br><span class="line">&#125;buf[<span class="number">1111</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(E a,E b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.avg&gt;b.avg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,t,i;</span><br><span class="line">    <span class="keyword">float</span> sum;</span><br><span class="line">    sum=t=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;buf[i].amount);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%f"</span>,&amp;buf[i].price);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        buf[i].avg=buf[i].price/buf[i].amount;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(buf,buf+n,cmp);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;<span class="keyword">if</span>(buf[i].amount&lt;=m)&#123;</span><br><span class="line">        sum+=buf[i].price;&#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum+=buf[i].avg*m;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        m=m-buf[i].amount;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2f"</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1020 月饼 (25)（25 分）&lt;br&gt;月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。&lt;/p&gt;
&lt;p&gt;注意：销售时允许取出一部分库存。样例给出的情形是这
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1019 数字黑洞 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1019-%E6%95%B0%E5%AD%97%E9%BB%91%E6%B4%9E-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1019-数字黑洞-20-（20-分）/</id>
    <published>2018-06-01T02:25:36.000Z</published>
    <updated>2018-06-01T02:25:59.151Z</updated>
    
    <content type="html"><![CDATA[<p>1019 数字黑洞 (20)（20 分）<br>给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kaprekar常数。</p><p>例如，我们从6767开始，将得到</p><p>7766 - 6677 = 1089\ 9810 - 0189 = 9621\ 9621 - 1269 = 8352\ 8532 - 2358 = 6174\ 7641 - 1467 = 6174\ … …</p><p>现给定任意4位正整数，请编写程序演示到达黑洞的过程。</p><p>输入格式：</p><p>输入给出一个(0, 10000)区间内的正整数N。</p><p>输出格式：</p><p>如果N的4位数字全相等，则在一行内输出“N - N = 0000”；否则将计算的每一步在一行内输出，直到6174作为差出现，输出格式见样例。注意每个数字按4位数格式输出。</p><p>输入样例1：</p><p>6767<br>输出样例1：</p><p>7766 - 6677 = 1089<br>9810 - 0189 = 9621<br>9621 - 1269 = 8352<br>8532 - 2358 = 6174<br>输入样例2：</p><p>2222<br>输出样例2：</p><p>2222 - 2222 = 0000</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span> a&gt;b;</span><br><span class="line">&#125;<span class="comment">///递减排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_array</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> num[])</span></span>&#123;<span class="comment">///将n的每一位存到num数组</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">    num[i]=n%<span class="number">10</span>;</span><br><span class="line">    n/=<span class="number">10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">to_number</span><span class="params">(<span class="keyword">int</span> num[])</span></span>&#123;<span class="comment">///将num数组转换为数字</span></span><br><span class="line">   <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       sum=sum*<span class="number">10</span>+num[i];</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,minm,maxm;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        to_array(n,num);</span><br><span class="line">        sort(num,num+<span class="number">4</span>);</span><br><span class="line">        minm=to_number(num);</span><br><span class="line">        sort(num,num+<span class="number">4</span>,cmp);</span><br><span class="line">        maxm=to_number(num);</span><br><span class="line">        n=maxm-minm;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%04d - %04d = %04d\n"</span>,maxm,minm,n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">6174</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1019 数字黑洞 (20)（20 分）&lt;br&gt;给定任一个各位数字不完全相同的4位正整数，如果我们先把4个数字按非递增排序，再按非递减排序，然后用第1个数字减第2个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的6174，这个神奇的数字也叫Kap
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1018 锤子剪刀布 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1018-%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1018-锤子剪刀布-20-（20-分）/</id>
    <published>2018-06-01T02:24:00.000Z</published>
    <updated>2018-06-01T02:24:17.203Z</updated>
    
    <content type="html"><![CDATA[<p>1018 锤子剪刀布 (20)（20 分）<br>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：</p><p>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p><p>输入格式：</p><p>输入第1行给出正整数N（&lt;=10^5^），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。</p><p>输出格式：</p><p>输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。</p><p>输入样例：</p><p>10<br>C J<br>J B<br>C B<br>B B<br>B C<br>C C<br>C B<br>J B<br>B C<br>J J<br>输出样例：</p><p>5 3 2<br>2 3 5<br>B B</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">char</span> a,b,q1,q2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> c1,c2,c3,d1,d2,d3,x1,y1,z1,x2,y2,z2;</span><br><span class="line">    c1=c2=c3=d1=d2=d3=x1=y1=z1=x2=y2=z2=<span class="number">0</span>;</span><br><span class="line">    d2=n;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        getchar();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c %c"</span>,&amp;a,&amp;b);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'C'</span>&amp;&amp;b==<span class="string">'J'</span>)&#123;c1++,x1++;&#125;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'B'</span>&amp;&amp;b==<span class="string">'C'</span>)&#123;c1++,y1++;&#125;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'J'</span>&amp;&amp;b==<span class="string">'B'</span>)&#123;c1++,z1++;&#125;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'C'</span>&amp;&amp;b==<span class="string">'C'</span>)c2++;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'B'</span>&amp;&amp;b==<span class="string">'B'</span>)c2++;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="string">'J'</span>&amp;&amp;b==<span class="string">'J'</span>)c2++;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">'C'</span>&amp;&amp;a==<span class="string">'J'</span>)&#123;d1++,x2++;&#125;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">'B'</span>&amp;&amp;a==<span class="string">'C'</span>)&#123;d1++,y2++;&#125;</span><br><span class="line">        <span class="keyword">if</span>(b==<span class="string">'J'</span>&amp;&amp;a==<span class="string">'B'</span>)&#123;d1++,z2++;&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    c3=d2-c1-c2;</span><br><span class="line">    d3=d2-d1-c2;</span><br><span class="line">    <span class="keyword">if</span>(x1&gt;y1&amp;&amp;x1&gt;z1)</span><br><span class="line">        q1=<span class="string">'C'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y1&gt;x1&amp;&amp;y1&gt;z1)</span><br><span class="line">        q1=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(z1&gt;x1&amp;&amp;z1&gt;y1)</span><br><span class="line">        q1=<span class="string">'J'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x1==y1&amp;&amp;x1&gt;z1)</span><br><span class="line">        q1=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y1==z1&amp;&amp;y1&gt;x1)</span><br><span class="line">        q1=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x1==z1&amp;&amp;x1&gt;y1)</span><br><span class="line">        q1=<span class="string">'C'</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        q1=<span class="string">'B'</span>;</span><br><span class="line">         <span class="keyword">if</span>(x2&gt;y2&amp;&amp;x2&gt;z2)</span><br><span class="line">        q2=<span class="string">'C'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y2&gt;x2&amp;&amp;y2&gt;z2)</span><br><span class="line">        q2=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(z2&gt;x2&amp;&amp;z2&gt;y2)</span><br><span class="line">        q2=<span class="string">'J'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x2==y2&amp;&amp;x2&gt;z2)</span><br><span class="line">        q2=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(y2==z2&amp;&amp;y2&gt;x2)</span><br><span class="line">        q2=<span class="string">'B'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x2==z2&amp;&amp;x2&gt;y2)</span><br><span class="line">        q2=<span class="string">'C'</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        q2=<span class="string">'B'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,c1,c2,c3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,d1,c2,d3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c %c"</span>,q1,q2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1018 锤子剪刀布 (20)（20 分）&lt;br&gt;大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：&lt;/p&gt;
&lt;p&gt;现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入第
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1017 A除以B (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1017-A%E9%99%A4%E4%BB%A5B-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1017-A除以B-20-（20-分）/</id>
    <published>2018-06-01T02:22:24.000Z</published>
    <updated>2018-06-01T02:22:41.650Z</updated>
    
    <content type="html"><![CDATA[<p>1017 A除以B (20)（20 分）<br>本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。</p><p>输入格式：</p><p>输入在1行中依次给出A和B，中间以1空格分隔。</p><p>输出格式：</p><p>在1行中依次输出Q和R，中间以1空格分隔。</p><p>输入样例：</p><p>123456789050987654321 7<br>输出样例：</p><p>17636684150141093474 3</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> a,t=<span class="number">0</span>,temp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s&gt;&gt;a;</span><br><span class="line">    <span class="keyword">int</span> len=s.length();</span><br><span class="line">    t=(s[<span class="number">0</span>]-<span class="string">'0'</span>)/a;</span><br><span class="line">    <span class="keyword">if</span>((t!=<span class="number">0</span>&amp;&amp;len&gt;<span class="number">1</span>)||len==<span class="number">1</span>)</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;t;</span><br><span class="line">    temp=(s[<span class="number">0</span>]-<span class="string">'0'</span>)%a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">        t=(temp*<span class="number">10</span>+s[i]-<span class="string">'0'</span>)/a;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;t;</span><br><span class="line">        temp=(temp*<span class="number">10</span>+s[i]-<span class="string">'0'</span>)%a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">" "</span>&lt;&lt;temp;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1017 A除以B (20)（20 分）&lt;br&gt;本题要求计算A/B，其中A是不超过1000位的正整数，B是1位正整数。你需要输出商数Q和余数R，使得A = B * Q + R成立。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入在1行中依次给出A和B，中间以1空格分隔。&lt;/p
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1016 部分A+B (15)（15 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1016-%E9%83%A8%E5%88%86A-B-15-%EF%BC%8815-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1016-部分A-B-15-（15-分）/</id>
    <published>2018-06-01T02:20:29.000Z</published>
    <updated>2018-06-01T02:20:56.991Z</updated>
    
    <content type="html"><![CDATA[<p>1016 部分A+B (15)（15 分）<br>正整数A的“D~A~（为1位整数）部分”定义为由A中所有D~A~组成的新整数P~A~。例如：给定A = 3862767，D~A~ = 6，则A的“6部分”P~A~是66，因为A中有2个6。</p><p>现给定A、D~A~、B、D~B~，请编写程序计算P~A~ + P~B~。</p><p>输入格式：</p><p>输入在一行中依次给出A、D~A~、B、D~B~，中间以空格分隔，其中0 &lt; A, B &lt; 10^10^。</p><p>输出格式：</p><p>在一行中输出P~A~ + P~B~的值。</p><p>输入样例1：</p><p>3862767 6 13530293 3<br>输出样例1：</p><p>399<br>输入样例2：</p><p>3862767 1 13530293 8<br>输出样例2：</p><p>0</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100000</span>],b[<span class="number">1000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> da,db;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s%d%s%d"</span>,a,&amp;da,b,&amp;db);</span><br><span class="line">    <span class="keyword">int</span> n,m,t1,t2,i,j,y,x,sum1,sum2,sum;</span><br><span class="line">    n=<span class="built_in">strlen</span>(a);</span><br><span class="line">    m=<span class="built_in">strlen</span>(b);</span><br><span class="line">    t1=t2=sum1=sum2=sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]-<span class="string">'0'</span>==da)</span><br><span class="line">            t1++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=m;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[j]-<span class="string">'0'</span>==db)</span><br><span class="line">            t2++;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span>(t1==<span class="number">0</span>&amp;&amp;t2==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(t1--)&#123;</span><br><span class="line">        sum1+=da;</span><br><span class="line">        da*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(t2--)</span><br><span class="line">    &#123;</span><br><span class="line">        sum2+=db;</span><br><span class="line">        db*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,sum1+sum2);</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1016 部分A+B (15)（15 分）&lt;br&gt;正整数A的“D~A~（为1位整数）部分”定义为由A中所有D~A~组成的新整数P~A~。例如：给定A = 3862767，D~A~ = 6，则A的“6部分”P~A~是66，因为A中有2个6。&lt;/p&gt;
&lt;p&gt;现给定A、D~A~、
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>L2-009 抢红包（25 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/L2-009-%E6%8A%A2%E7%BA%A2%E5%8C%85%EF%BC%8825-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/L2-009-抢红包（25-分）/</id>
    <published>2018-05-31T09:11:37.000Z</published>
    <updated>2018-05-31T09:11:58.499Z</updated>
    
    <content type="html"><![CDATA[<p>L2-009 抢红包（25 分）<br>没有人没抢过红包吧…… 这里给出N个人之间互相发红包、抢红包的记录，请你统计一下他们抢红包的收获。</p><p>输入格式：</p><p>输入第一行给出一个正整数N（&lt;= 10^4^），即参与发红包和抢红包的总人数，则这些人从1到N编号。随后N行，第i行给出编号为i的人发红包的记录，格式如下：</p><p>K N~1~ P~1~ … N~K~ P~K~</p><p>其中K（0 &lt;= K &lt;= 20）是发出去的红包个数，N~i~是抢到红包的人的编号，P~i~（&gt; 0）是其抢到的红包金额（以分为单位）。注意：对于同一个人发出的红包，每人最多只能抢1次，不能重复抢。</p><p>输出格式：</p><p>按照收入金额从高到低的递减顺序输出每个人的编号和收入金额（以元为单位，输出小数点后2位）。每个人的信息占一行，两数字间有1个空格。如果收入金额有并列，则按抢到红包的个数递减输出；如果还有并列，则按个人编号递增输出。</p><p>输入样例：</p><p>10<br>3 2 22 10 58 8 125<br>5 1 345 3 211 5 233 7 13 8 101<br>1 7 8800<br>2 1 1000 2 1000<br>2 4 250 10 320<br>6 5 11 9 22 8 33 7 44 10 55 4 2<br>1 3 8800<br>2 1 23 2 123<br>1 8 250<br>4 2 121 4 516 7 112 9 10<br>输出样例：</p><p>1 11.63<br>2 3.63<br>8 3.63<br>3 2.11<br>7 1.69<br>6 -1.67<br>9 -2.18<br>10 -3.26<br>5 -3.26<br>4 -12.32</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">X</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,sum,num;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(X a,X b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.sum!=b.sum)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.sum&gt;b.sum;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a.num!=b.num)&#123;</span><br><span class="line">        <span class="keyword">return</span> a.num&gt;b.num;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k,a,b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;X&gt; v(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        v[i].id = i;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">            v[a].sum+=b;</span><br><span class="line">            v[a].num++;</span><br><span class="line">            v[i].sum-=b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(v.begin()+<span class="number">1</span>,v.end(),cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">double</span> res = (<span class="keyword">double</span>)(v[i].sum*<span class="number">1.0</span>/<span class="number">100</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %.2f\n"</span>,v[i].id,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;L2-009 抢红包（25 分）&lt;br&gt;没有人没抢过红包吧…… 这里给出N个人之间互相发红包、抢红包的记录，请你统计一下他们抢红包的收获。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入第一行给出一个正整数N（&amp;lt;= 10^4^），即参与发红包和抢红包的总人数，则这些人从
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1015 德才论 (25)（25 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1015-%E5%BE%B7%E6%89%8D%E8%AE%BA-25-%EF%BC%8825-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1015-德才论-25-（25-分）/</id>
    <published>2018-05-31T08:59:43.000Z</published>
    <updated>2018-05-31T09:00:04.321Z</updated>
    
    <content type="html"><![CDATA[<p>1015 德才论 (25)（25 分）<br>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p><p>输入格式：</p><p>输入第1行给出3个正整数，分别为：N（&lt;=10^5^），即考生总数；L（&gt;=60），为录取最低分数线，即德分和才分均不低于L的考生才有资格被考虑录取；H（&lt;100），为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于H，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线L的考生也按总分排序，但排在第三类考生之后。</p><p>随后N行，每行给出一位考生的信息，包括：准考证号、德分、才分，其中准考证号为8位整数，德才分为区间[0, 100]内的整数。数字间以空格分隔。</p><p>输出格式：</p><p>输出第1行首先给出达到最低分数线的考生人数M，随后M行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</p><p>输入样例：</p><p>14 60 80<br>10000001 64 90<br>10000002 90 60<br>10000011 85 80<br>10000003 85 80<br>10000004 80 85<br>10000005 82 77<br>10000006 83 76<br>10000007 90 78<br>10000008 75 79<br>10000009 59 90<br>10000010 88 45<br>10000012 80 100<br>10000013 90 99<br>10000014 66 60<br>输出样例：</p><p>12<br>10000013 90 99<br>10000012 80 100<br>10000003 85 80<br>10000011 85 80<br>10000004 80 85<br>10000007 90 78<br>10000006 83 76<br>10000005 82 77<br>10000002 90 60<br>10000014 66 60<br>10000008 75 79<br>10000001 64 90</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> de;</span><br><span class="line"><span class="keyword">int</span> cai;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(struct node a,struct node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((a.de+a.cai)!=(b.de+b.cai))</span><br><span class="line">        <span class="keyword">return</span>(a.de+a.cai)&gt;(b.de+b.cai);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.de!=b.de)</span><br><span class="line">        <span class="keyword">return</span> a.de&gt;b.de;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.num&lt;b.num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,low,high;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;low,&amp;high);</span><br><span class="line">    <span class="built_in">vector</span>&lt;node&gt; v[<span class="number">4</span>];</span><br><span class="line">    node temp;</span><br><span class="line">    <span class="keyword">int</span> total=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;temp.num,&amp;temp.de,&amp;temp.cai);</span><br><span class="line">        <span class="keyword">if</span>(temp.de&lt;low||temp.cai&lt;low)</span><br><span class="line">            total--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.de&gt;=high&amp;&amp;temp.cai&gt;=high)</span><br><span class="line">            v[<span class="number">0</span>].push_back(temp);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.de&gt;=high&amp;&amp;temp.cai&lt;high)</span><br><span class="line">            v[<span class="number">1</span>].push_back(temp);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(temp.de&lt;high&amp;&amp;temp.cai&lt;high&amp;&amp;temp.de&gt;=temp.cai)</span><br><span class="line">            v[<span class="number">2</span>].push_back(temp);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            v[<span class="number">3</span>].push_back(temp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,total);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sort(v[i].begin(),v[i].end(),cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;v[i].size();j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d %d %d\n"</span>,v[i][j].num,v[i][j].de,v[i][j].cai);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1015 德才论 (25)（25 分）&lt;br&gt;宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”&lt;/p&gt;
&lt;p&gt;现给出一批考生的德才
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1014 福尔摩斯的约会 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1014-%E7%A6%8F%E5%B0%94%E6%91%A9%E6%96%AF%E7%9A%84%E7%BA%A6%E4%BC%9A-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1014-福尔摩斯的约会-20-（20-分）/</id>
    <published>2018-05-31T08:54:27.000Z</published>
    <updated>2018-05-31T08:58:12.221Z</updated>
    
    <content type="html"><![CDATA[<p>1014 福尔摩斯的约会 (20)（20 分）<br>大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm”。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间“星期四 14:04”，因为前面两字符串中第1对相同的大写英文字母（大小写有区分）是第4个字母’D’，代表星期四；第2对相同的字符是’E’，那是第5个英文字母，代表一天里的第14个钟头（于是一天的0点到23点由数字0到9、以及大写字母A到N表示）；后面两字符串第1对相同的英文字母’s’出现在第4个位置（从0开始计数）上，代表第4分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p><p>输入格式：</p><p>输入在4行中分别给出4个非空、不包含空格、且长度不超过60的字符串。</p><p>输出格式：</p><p>在一行中输出约会的时间，格式为“DAY HH:MM”，其中“DAY”是某星期的3字符缩写，即MON表示星期一，TUE表示星期二，WED表示星期三，THU表示星期四，FRI表示星期五，SAT表示星期六，SUN表示星期日。题目输入保证每个测试存在唯一解。</p><p>输入样例：</p><p>3485djDkxh4hhGE<br>2984akDfkkkkggEdsb<br>s&amp;hgsfdk<br>d&amp;Hyscvnm<br>输出样例：</p><p>THU 14:04</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">    <span class="built_in">string</span> a,b,c,d;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> week[<span class="number">7</span>]=&#123;<span class="string">"MON"</span>,<span class="string">"TUE"</span>,<span class="string">"WED"</span>,<span class="string">"THU"</span>,<span class="string">"FRI"</span>,<span class="string">"SAT"</span>,<span class="string">"SUN"</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class="line">    <span class="keyword">int</span> length1=a.length()&gt;b.length()?b.length():a.length();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length1;i++)</span><br><span class="line">    &#123;   <span class="comment">//寻找第一个相同的大写字母，因为对应的是星期几，所以只找前7个即可 </span></span><br><span class="line">        <span class="keyword">if</span>(a[i]==b[i]&amp;&amp;(a[i]&gt;=<span class="number">65</span>&amp;&amp;a[i]&lt;=<span class="number">71</span>)&amp;&amp;flag==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;week[a[i]<span class="number">-65</span>]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;<span class="comment">//注意找第二对相同的字符的时候，是从第一队相同大写字母后面找</span></span><br><span class="line">        <span class="comment">//因为样例中8相同，但是他却说E是相同的字符，其次该字符必须在</span></span><br><span class="line">        <span class="comment">//0-9或者A-N之间才行。 </span></span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">1</span>&amp;&amp;a[i]==b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;=<span class="string">'0'</span>&amp;&amp;a[i]&lt;=<span class="string">'9'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;a[i]-<span class="string">'0'</span>&lt;&lt;<span class="string">":"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;=<span class="string">'A'</span>&amp;&amp;a[i]&lt;=<span class="string">'N'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;a[i]<span class="number">-65</span>+<span class="number">10</span>&lt;&lt;<span class="string">":"</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> length2=c.length()&gt;d.length()?d.length():c.length(); </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length2;i++)</span><br><span class="line">    &#123;   <span class="comment">//后两字符串必须满足是两个英文字母相等才可以 </span></span><br><span class="line">        <span class="keyword">if</span>(c[i]==d[i]&amp;&amp;((c[i]&gt;=<span class="number">65</span>&amp;&amp;c[i]&lt;=<span class="number">90</span>)||(c[i]&gt;=<span class="number">97</span>&amp;&amp;c[i]&lt;=<span class="number">122</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i&lt;=<span class="number">9</span>)    <span class="comment">//不足两位数补0 </span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"0"</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1014 福尔摩斯的约会 (20)（20 分）&lt;br&gt;大侦探福尔摩斯接到一张奇怪的字条：“我们约会吧！ 3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;amp;hgsfdk d&amp;amp;Hyscvnm”。大侦探很快就明白了，字条上奇怪的乱码实际上就
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1013 数素数 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1013-%E6%95%B0%E7%B4%A0%E6%95%B0-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1013-数素数-20-（20-分）/</id>
    <published>2018-05-31T08:52:38.000Z</published>
    <updated>2018-05-31T08:53:00.958Z</updated>
    
    <content type="html"><![CDATA[<p>1013 数素数 (20)（20 分）<br>令P~i~表示第i个素数。现任给两个正整数M &lt;= N &lt;= 10^4^，请输出P~M~到P~N~的所有素数。</p><p>输入格式：</p><p>输入在一行中给出M和N，其间以空格分隔。</p><p>输出格式：</p><p>输出从P~M~到P~N~的所有素数，每10个数字占1行，其间以空格分隔，但行末不得有多余空格。</p><p>输入样例：</p><p>5 27<br>输出样例：</p><p>11 13 17 19 23 29 31 37 41 43<br>47 53 59 61 67 71 73 79 83 89<br>97 101 103</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=a;i++)</span><br><span class="line">        <span class="keyword">if</span>(a%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m,n,num=<span class="number">2</span>,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(isprime(num))&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(cnt&gt;=m) v.push_back(num);</span><br><span class="line">        &#125;</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.size();i++)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="keyword">if</span>(cnt%<span class="number">10</span>!=<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>,v[i]);</span><br><span class="line">        <span class="keyword">if</span>(cnt%<span class="number">10</span>==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1013 数素数 (20)（20 分）&lt;br&gt;令P~i~表示第i个素数。现任给两个正整数M &amp;lt;= N &amp;lt;= 10^4^，请输出P~M~到P~N~的所有素数。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;/p&gt;
&lt;p&gt;输入在一行中给出M和N，其间以空格分隔。&lt;/p&gt;
&lt;p&gt;输出格式
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
  <entry>
    <title>1012 数字分类 (20)（20 分）</title>
    <link href="http://huangyiblog.com/%E9%A2%98%E8%A7%A3%E9%9B%86/1012-%E6%95%B0%E5%AD%97%E5%88%86%E7%B1%BB-20-%EF%BC%8820-%E5%88%86%EF%BC%89/"/>
    <id>http://huangyiblog.com/题解集/1012-数字分类-20-（20-分）/</id>
    <published>2018-05-31T08:50:59.000Z</published>
    <updated>2018-05-31T08:51:25.682Z</updated>
    
    <content type="html"><![CDATA[<p>1012 数字分类 (20)（20 分）<br>给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：</p><p>A1 = 能被5整除的数字中所有偶数的和；</p><p>A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…；</p><p>A3 = 被5除后余2的数字的个数；</p><p>A4 = 被5除后余3的数字的平均数，精确到小数点后1位；</p><p>A5 = 被5除后余4的数字中最大数字。</p><p>输入格式：</p><p>每个输入包含1个测试用例。每个测试用例先给出一个不超过1000的正整数N，随后给出N个不超过1000的待分类的正整数。数字间以空格分隔。</p><p>输出格式：</p><p>对给定的N个正整数，按题目要求计算A1~A5并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。</p><p>若其中某一类数字不存在，则在相应位置输出“N”。</p><p>输入样例1：</p><p>13 1 2 3 4 5 6 7 8 9 10 20 16 18<br>输出样例1：</p><p>30 11 2 9.7 9<br>输入样例2：</p><p>8 1 2 4 5 6 7 9 16<br>输出样例2：</p><p>N 11 2 N 9</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,n,a[<span class="number">1001</span>],sum1,sum2,count1,count2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    sum1=sum2=count1=count2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> avg,sum3=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag=<span class="number">1</span>,max=<span class="number">0</span>,t=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">      <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">      <span class="keyword">if</span>(a[i]%<span class="number">5</span>==<span class="number">0</span>&amp;&amp;a[i]%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        sum1+=a[i];</span><br><span class="line">      <span class="keyword">if</span>(a[i]%<span class="number">5</span>==<span class="number">1</span>)&#123;</span><br><span class="line">        sum2+=a[i]*flag;</span><br><span class="line">        flag=flag*<span class="number">-1</span>;</span><br><span class="line">        t++;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(a[i]%<span class="number">5</span>==<span class="number">2</span>)</span><br><span class="line">        count1++;</span><br><span class="line">      <span class="keyword">if</span>(a[i]%<span class="number">5</span>==<span class="number">3</span>)&#123;</span><br><span class="line">        sum3+=a[i];</span><br><span class="line">        count2++;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="keyword">if</span>(a[i]%<span class="number">5</span>==<span class="number">4</span>)</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="keyword">if</span>(a[i]&gt;max)</span><br><span class="line">            max=a[i];</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  avg=sum3/count2;</span><br><span class="line">  <span class="keyword">if</span>(sum1==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"N "</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,sum1);</span><br><span class="line">  <span class="keyword">if</span>(t==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"N "</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,sum2);</span><br><span class="line">  <span class="keyword">if</span>(count1==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"N "</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>,count1);</span><br><span class="line">  <span class="keyword">if</span>(count2==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"N "</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>,avg);</span><br><span class="line">  <span class="keyword">if</span>(max==<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"N"</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,max);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1012 数字分类 (20)（20 分）&lt;br&gt;给定一系列正整数，请按要求对数字进行分类，并输出以下5个数字：&lt;/p&gt;
&lt;p&gt;A1 = 能被5整除的数字中所有偶数的和；&lt;/p&gt;
&lt;p&gt;A2 = 将被5除后余1的数字按给出顺序进行交错求和，即计算n1-n2+n3-n4…；&lt;/
      
    
    </summary>
    
      <category term="题解集" scheme="http://huangyiblog.com/categories/%E9%A2%98%E8%A7%A3%E9%9B%86/"/>
    
    
      <category term="PAT" scheme="http://huangyiblog.com/tags/PAT/"/>
    
  </entry>
  
</feed>
